from contextlib import asynccontextmanager
from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from app.api.routers import alerts, auth, equipment, parameters, rules, settings, users
from app.core.config import settings as app_settings


@asynccontextmanager
async def lifespan(app_instance: FastAPI):
    print("PRINT:  –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ FastAPI –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    yield
    print("PRINT:  –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ FastAPI –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è...")


# --- –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ---
description = """
    API –º–æ–±–∏–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (MsM) –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º 
    —Å–ª–µ–¥–∏—Ç—å –∑–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è! üöÄ

    –í—ã —Å–º–æ–∂–µ—Ç–µ:
        - –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–∏–º –ø—Ä–æ—Ñ–∏–ª–µ–º;
        - –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∏–µ—Ä–∞—Ä—Ö–∏—é –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è (—Ü–µ—Ö–∞, –ª–∏–Ω–∏–∏, –∞–≥—Ä–µ–≥–∞—Ç—ã, –∞–∫—Ç—É–∞—Ç–æ—Ä—ã);
        - –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –∞–∫—Ç—É–∞—Ç–æ—Ä–æ–≤ –∏ –∏—Ö –∑–Ω–∞—á–µ–Ω–∏—è;
        - –°–æ–∑–¥–∞–≤–∞—Ç—å –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤;
        - –ü–æ–ª—É—á–∞—Ç—å –∏ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Ç—Ä–µ–≤–æ–≥–∏, —Å—Ä–∞–±–æ—Ç–∞–≤—à–∏–µ –ø–æ –≤–∞—à–∏–º –ø—Ä–∞–≤–∏–ª–∞–º.
"""


# --- –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ FastAPI ---
app = FastAPI(
    title="MsM ‚Äì –º–æ–±–∏–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (API)",
    description=description,
    version="0.1.0",
    lifespan=lifespan,
    # openapi_url=f"{app_settings.API_V1_STR}/openapi.json"
    # docs_url="/docs",
    # redoc_url="/redoc"
)


# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CORS (Cross-Origin Resource Sharing) ---
if app_settings.BACKEND_CORS_ORIGINS:
    app.add_middleware(
        CORSMiddleware,  # noqa
        allow_origins=[str(origin) for origin in app_settings.BACKEND_CORS_ORIGINS],
        allow_credentials=True,
        allow_methods=["*"],
        allow_headers=["*"],
    )
else:
    app.add_middleware(
        CORSMiddleware,  # noqa
        allow_origins=["*"],  # TODO: –î–ª—è production —ç—Ç–æ –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω–æ!
        allow_credentials=True,
        allow_methods=["*"],
        allow_headers=["*"],
    )


# --- –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–æ–≤ ---
api_prefix = ""  # –ü–æ–∫–∞ –±–µ–∑ –æ–±—â–µ–≥–æ –ø—Ä–µ—Ñ–∏–∫—Å–∞
    # api_prefix = "/api/v1"

app.include_router(auth.router, prefix=f"{api_prefix}", tags=["Authentication"])
app.include_router(users.router, prefix=f"{api_prefix}", tags=["Users"])
app.include_router(settings.router, prefix=f"{api_prefix}", tags=["User Settings"])
app.include_router(equipment.router, prefix=f"{api_prefix}", tags=["Equipment Hierarchy"])
app.include_router(parameters.router, prefix=f"{api_prefix}", tags=["Parameters & Data"])
app.include_router(rules.router, prefix=f"{api_prefix}", tags=["Monitoring Rules"])
app.include_router(alerts.router, prefix=f"{api_prefix}", tags=["Alerts"])


# –ü—Ä–æ—Å—Ç–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ API (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
@app.get("/", tags=["Root"])
async def read_root():
    return {"message": "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ API –º–æ–±–∏–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (–ús–ú)!"}