import json
from contextlib import asynccontextmanager

from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from faststream.rabbit import ExchangeType, RabbitBroker, RabbitExchange, RabbitQueue

from app.api.routers import alerts, auth, equipment, parameters, rules, settings, users, websockets
from app.core.config import settings as app_settings
from app.services.websocket_service import connection_manager


# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è FastStream –¥–ª—è –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è Websocket-–¥–∞–Ω–Ω—ã—Ö –≤–Ω—É—Ç—Ä–∏ FastAPI ---
websocket_consumer_broker = RabbitBroker(app_settings.RABBITMQ_URL)

live_data_exchange_fastapi = RabbitExchange(
    name=app_settings.RABBITMQ_LIVE_DATA_EXCHANGE_NAME,
    type=ExchangeType.FANOUT,
    durable=True
)

websocket_consumer_queue = RabbitQueue(
    name="",
    durable=False,
    auto_delete=True,
    exclusive=True,
)


@websocket_consumer_broker.subscriber(queue=websocket_consumer_queue, exchange=live_data_exchange_fastapi)
async def _consume_live_data_for_ws(data: dict):
    """ –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –∑–Ω–∞—á–µ–Ω–∏—è—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏–∑ RabbitMQ –∏ —Ä–∞—Å—Å—ã–ª–∞–µ—Ç –∏—Ö —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º WebSocket-–ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º """
    print(f"[FastAPI]  –ü–æ–ª—É—á–∏–ª live data —á–µ—Ä–µ–∑ RabbitMQ: {data}")
    parameter_id_val = data.get("parameter_id")
    if parameter_id_val is not None:
        try:
            parameter_id_int = int(parameter_id_val)
            message_json = json.dumps(data)
            await connection_manager.broadcast_to_parameter_subscribers(parameter_id_int, message_json)
        except ValueError:
            print(f"[FastAPI]  !!! –û–®–ò–ë–ö–ê: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç parameter_id –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏: {parameter_id_val}")
        except Exception as e_broadcast:
             print(f"[FastAPI]  !!! –û–®–ò–ë–ö–ê –≤–æ –≤—Ä–µ–º—è —Ä–∞—Å—Å—ã–ª–∫–∏ –¥–ª—è parameter_id {parameter_id_val}: {e_broadcast}")
    else:
        print(f"[FastAPI]  –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ parameter_id: {data}")


@asynccontextmanager
async def lifespan(_app_instance: FastAPI):
    """ –£–ø—Ä–∞–≤–ª—è–µ—Ç –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º WebSocket consumer-–±—Ä–æ–∫–µ—Ä–∞ –≤ FastAPI.
    –ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –±—Ä–æ–∫–µ—Ä, –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ - –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –µ–≥–æ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç. """
    print("[FastAPI]  Lifespan –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    print("[FastAPI]  –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å WebSocket consumer broker...")
    try:
        await websocket_consumer_broker.connect()
        print(f"[FastAPI]  –û–±—ä—è–≤–ª—è—é exchange '{live_data_exchange_fastapi.name}' –¥–ª—è WebSocket consumer...")
        await websocket_consumer_broker.declare_exchange(live_data_exchange_fastapi)
        print(f"[FastAPI]  –û–±—ä—è–≤–ª—è—é –æ—á–µ—Ä–µ–¥—å –¥–ª—è WebSocket consumer...")
        await websocket_consumer_broker.declare_queue(websocket_consumer_queue)
        print(f"[FastAPI]  –û—á–µ—Ä–µ–¥—å –¥–ª—è WebSocket consumer —É—Å–ø–µ—à–Ω–æ –æ–±—ä—è–≤–ª–µ–Ω–∞.")
        await websocket_consumer_broker.start()
        print("[FastAPI]  WebSocket consumer broker —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω.")
    except Exception as e:
        print(f"[FastAPI]  !!! –û–®–ò–ë–ö–ê –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ WebSocket consumer broker: {type(e).__name__} - {e}")
    yield
    print("- - - - - -\n[FastAPI]  –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ FastAPI –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è...")
    print("[FastAPI]  –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç—å WebSocket consumer broker...")
    try:
        await websocket_consumer_broker.close()
        print("[FastAPI]  WebSocket consumer broker —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã—Ç.")
    except Exception as e:
        print(f"[FastAPI]  !!! –û–®–ò–ë–ö–ê –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ WebSocket consumer broker: {type(e).__name__} - {e}")


# --- –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ---
description = """
    API –º–æ–±–∏–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (MsM) –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º 
    —Å–ª–µ–¥–∏—Ç—å –∑–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è! üöÄ

    –í—ã —Å–º–æ–∂–µ—Ç–µ:
        - –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–∏–º –ø—Ä–æ—Ñ–∏–ª–µ–º;
        - –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∏–µ—Ä–∞—Ä—Ö–∏—é –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è (—Ü–µ—Ö–∏, –ª–∏–Ω–∏–∏, –∞–≥—Ä–µ–≥–∞—Ç—ã, –∞–∫—Ç—É–∞—Ç–æ—Ä—ã);
        - –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –∞–∫—Ç—É–∞—Ç–æ—Ä–æ–≤ –∏ –∏—Ö –∑–Ω–∞—á–µ–Ω–∏—è;
        - –°–æ–∑–¥–∞–≤–∞—Ç—å –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤;
        - –ü–æ–ª—É—á–∞—Ç—å –∏ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Ç—Ä–µ–≤–æ–≥–∏, —Å—Ä–∞–±–æ—Ç–∞–≤—à–∏–µ –ø–æ –≤–∞—à–∏–º –ø—Ä–∞–≤–∏–ª–∞–º;
        - –°—Ç—Ä–æ–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤ –æ—Ñ—Ñ–ª–∞–π–Ω –∏ –æ–Ω–ª–∞–π–Ω —Ä–µ–∂–∏–º–∞—Ö.
"""


# --- –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ FastAPI ---
app = FastAPI(
    title="MsM ‚Äì –º–æ–±–∏–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (API)",
    description=description,
    version="0.1.0",
    lifespan=lifespan,
    # openapi_url=f"{app_settings.API_V1_STR}/openapi.json"
    # docs_url="/docs",
    # redoc_url="/redoc"
)


# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CORS (Cross-Origin Resource Sharing) ---
if app_settings.BACKEND_CORS_ORIGINS:
    app.add_middleware(
        CORSMiddleware,  # type: ignore
        allow_origins=[str(origin) for origin in app_settings.BACKEND_CORS_ORIGINS],
        allow_credentials=True,
        allow_methods=["*"],
        allow_headers=["*"],
    )
else:
    app.add_middleware(
        CORSMiddleware,  # type: ignore
        allow_origins=["*"],  # TODO: –î–ª—è production —ç—Ç–æ –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω–æ!
        allow_credentials=True,
        allow_methods=["*"],
        allow_headers=["*"],
    )


# --- –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–æ–≤ ---
api_prefix = ""  # –ü–æ–∫–∞ –±–µ–∑ –æ–±—â–µ–≥–æ –ø—Ä–µ—Ñ–∏–∫—Å–∞
    # api_prefix = "/api/v1"

app.include_router(auth.router, prefix=f"{api_prefix}", tags=["Authentication"])
app.include_router(users.router, prefix=f"{api_prefix}", tags=["Users"])
app.include_router(settings.router, prefix=f"{api_prefix}", tags=["User Settings"])
app.include_router(equipment.router, prefix=f"{api_prefix}", tags=["Equipment Hierarchy"])
app.include_router(parameters.router, prefix=f"{api_prefix}", tags=["Parameters & Data"])
app.include_router(rules.router, prefix=f"{api_prefix}", tags=["Monitoring Rules"])
app.include_router(alerts.router, prefix=f"{api_prefix}", tags=["Alerts"])
app.include_router(websockets.router, prefix=f"{api_prefix}", tags=["WebSockets"])

print("[FastAPI]  –†–æ—É—Ç–µ—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω—ã.")